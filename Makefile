include $(NACL_SDK_ROOT)/tools/common.mk

VALID_TOOLCHAINS := clang-newlib

TARGET = ctox
LIBS = ppapi_cpp ppapi pthread toxcore sodium opus vpx nacl_io

CFLAGS = -Wall -std=gnu++11

ifeq ($(CONFIG),Debug)
    CFLAGS+= -DDEBUG
endif

SOURCES = src/nacl/ctox.cpp \
          src/nacl/tox/core.cpp \
          src/nacl/tox/settings.cpp \

# Build rules generated by macros from common.mk:

$(foreach dep,$(DEPS),$(eval $(call DEPEND_RULE,$(dep))))
$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))